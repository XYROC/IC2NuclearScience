package nuclearscience.item;

import java.util.LinkedList;
import java.util.List;

import ic2.api.item.ElectricItem;
import ic2.api.item.IElectricItem;
import ic2.api.item.IItemHudInfo;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import nuclearscience.NuclearScience;

public class ItemLapotronStorageUnit extends Item implements IElectricItem, IItemHudInfo {

	private double energy;
	private double maxEnergy;

	public ItemLapotronStorageUnit() {
		energy = 0;
		maxEnergy = 50000000;
		setMaxDamage(27);
		setNoRepair();
	}

	public static void writeToNbt(ItemStack itemStack, double energy) {
		NBTTagCompound nbt = itemStack.getTagCompound();
		nbt.setDouble("energy", energy);
	}

	public static double readFromNbt(ItemStack itemStack) {
		NBTTagCompound nbt = itemStack.getTagCompound();
		if (nbt.hasKey("energy"))
			return nbt.getDouble("energy");
		NuclearScience.error("Failed to read energy from item " + itemStack + ". No energy NBT-Tag found.");
		return 0;
	}
	
	@Override
	public int getDamage(ItemStack stack) {
		double energy = readFromNbt(stack);
		if(energy <= 0.0D) return 27;
		double var = energy / getMaxCharge(stack);
		return (int) var - 27;
	}

	@Override
	public boolean canProvideEnergy(ItemStack itemStack) {
		return true;
	}

	@Override
	public Item getChargedItem(ItemStack itemStack) {
		return this;
	}

	@Override
	public Item getEmptyItem(ItemStack itemStack) {
		return this;
	}

	@Override
	public double getMaxCharge(ItemStack itemStack) {
		return maxEnergy;
	}

	@Override
	public int getTier(ItemStack itemStack) {
		return 4;
	}

	@Override
	public double getTransferLimit(ItemStack itemStack) {
		double energy = readFromNbt(itemStack);
		if (energy > 2048.0D)
			return 2048.0D;
		return energy;
	}

	@Override
	public List<String> getHudInfo(ItemStack itemStack) {
		List<String> info = new LinkedList();
	    info.add(ElectricItem.manager.getToolTip(itemStack));
	    return info;
	}

}
